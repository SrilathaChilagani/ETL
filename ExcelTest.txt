<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/9/2022 9:59:04 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CL-SDODDA-G9"
  DTS:CreatorName="TCCROCKS\sdodda"
  DTS:DTSID="{DA944A50-1608-468E-863D-968DAB8AB6F6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.948.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="18"
  DTS:VersionGUID="{54FB7DFE-B97A-4412-8763-03DB5FDF9D5D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SC - Excel Auto"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{37A7ADB2-3188-403C-8044-2A2E1FD94D93}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SC - Excel Auto"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c6633016e54045479b3b809bdae970fa"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c6633016e54045479b3b809bdae970fa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c6633016e54045479b3b809bdae970fa")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6633016e54045479b3b809bdae970fa.Properties.Settings.get_Default():ST_c6633016e54045479b3b809bdae970fa.Properties.Sett" +
    "ings")]

namespace ST_c6633016e54045479b3b809bdae970fa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
#endregion

namespace ST_c6633016e54045479b3b809bdae970fa
{


    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]


    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {

        public void Main()
        {

            //the datetime and Log folder will be used for error log file in case error occured
            //string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            //string LogFolder = @"C:C:\Users\SDodda\Documents";
            try
            {
                //Provide the path where Excel files exists
                string FolderPath = @"C:\Users\SDodda\Documents";
                //Provide the table name in which you want to load the data
                string TableName = "STG_RISKPI";
                //Provide the schema of table 
                string SchemaName = "dbo";
                //Provide the starting column for read actul records
                string StartingColumn = "A";
                //Provide the end column till which you want to read
                string EndingColumn = "BE";
                //Provide the row number from which you like to start reading
                string StartReadingFromRow = "3";
                //Provide the Database Name in which table or view exists
                string DatabaseName = "BIDWStage";
                //Provide the SQL Server Name 
                string SQLServerName = "tc3vmdevdb4.338311110d7d.database.windows.net";
                var directory = new DirectoryInfo(FolderPath);
                FileInfo[] files = directory.GetFiles();

                //Declare and initilize variables
                string fileFullPath = "";

                //Get one Book(Excel file at a time)
                foreach (FileInfo file in files)
                {
                    fileFullPath = FolderPath + "\\" + file.Name;

                    //Create Excel Connection
                    string ConStr;
                    string HDR;
                    HDR = "YES";
                    ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source="
                        + fileFullPath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + ";IMEX=0\"";
                    OleDbConnection cnn = new OleDbConnection(ConStr);

                    //Get Sheet Name, it can handle multiple sheets
                    cnn.Open();
                    DataTable dtSheet = cnn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                    string sheetname;
                    sheetname = "";
                    foreach (DataRow drSheet in dtSheet.Rows)
                    {
                        if (drSheet["TABLE_NAME"].ToString().Contains("$"))
                        {
                            sheetname = drSheet["TABLE_NAME"].ToString();

                            //Load the DataTable with Sheet Data so we can get the column header
                            OleDbCommand oconn = new OleDbCommand("select top 1 * from ["
                                + sheetname + StartingColumn + StartReadingFromRow + ":" + EndingColumn + "]", cnn);
                            OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                            DataTable dt = new DataTable();
                            adp.Fill(dt);
                            cnn.Close();
                            //Prepare Header columns list so we can run against Database to get matching columns for a table.
                            //If columns does not exists in table, it will ignore and load only matching columns data
                            string ExcelHeaderColumn = "";
                            string SQLQueryToGetMatchingColumn = "";
                            for (int i = 0; i < dt.Columns.Count; i++)
                            {
                                if (i != dt.Columns.Count - 1)
                                    ExcelHeaderColumn += "'" + dt.Columns[i].ColumnName + "'" + ",";
                                else
                                    ExcelHeaderColumn += "'" + dt.Columns[i].ColumnName + "'";
                            }

                            SQLQueryToGetMatchingColumn = "select STUFF((Select  ',['+Column_Name+']' from Information_schema.Columns where Table_Name='" +
                                TableName + "' and Table_SChema='" + SchemaName + "'" +
                                "and Column_Name in (" + @ExcelHeaderColumn + ") for xml path('')),1,1,'') AS ColumnList";


                            //Create Connection to SQL Server Database from which you like to export tables to Excel
                            SqlConnection SQLConnection = new SqlConnection();
                            SQLConnection.ConnectionString = "Data Source = "
                                + SQLServerName + "; Initial Catalog ="
                                + DatabaseName + "; "
                                + "Integrated Security=true;";

                            //Get Matching Column List from SQL Server
                            string SQLColumnList = "";
                            SqlCommand cmd = SQLConnection.CreateCommand();
                            cmd.CommandText = SQLQueryToGetMatchingColumn;
                            SQLConnection.Open();
                            SQLColumnList = (string)cmd.ExecuteScalar();
                            SQLConnection.Close();

                            //Use Actual Matching Columns to get data from Excel Sheet
                            OleDbConnection cnn1 = new OleDbConnection(ConStr);
                            cnn1.Open();
                            OleDbCommand oconn1 = new OleDbCommand("select " + SQLColumnList
                                + " from [" + sheetname + StartingColumn
                                + StartReadingFromRow + ":" + EndingColumn + "]", cnn1);
                            OleDbDataAdapter adp1 = new OleDbDataAdapter(oconn1);
                            DataTable dt1 = new DataTable();
                            adp1.Fill(dt1);
                            cnn1.Close();
                            SQLConnection.Open();
                            //Load Data from DataTable to SQL Server Table.
                            using (SqlBulkCopy BC = new SqlBulkCopy(SQLConnection))
                            {
                                BC.DestinationTableName = SchemaName + "." + TableName;
                                foreach (var column in dt1.Columns)
                                    BC.ColumnMappings.Add(column.ToString(), column.ToString());
                                BC.WriteToServer(dt1);
                            }
                            SQLConnection.Close();

                        }
                    }
                }
            }
            catch (Exception ex)
            {
                if (ex.Source != null)
                    Console.WriteLine("IOException source: {0}", ex.Source);
                throw;
            }


            Dts.TaskResult = (int)ScriptResults.Success;
        }
  

            #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
            enum ScriptResults
            {
                Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
                Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
            };
            #endregion

        }
    }]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c6633016e54045479b3b809bdae970fa</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c6633016e54045479b3b809bdae970fa</msb:DisplayName>
    <msb:ProjectId>{5B49BE76-6FB4-4DC9-886B-ABD5D8C8DBD3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c6633016e54045479b3b809bdae970fa.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="49cc526d119f4c2e966c97b71f48977a">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>63</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="aff0c965b08d44e0ae0bd2331603fc39">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>21</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>57</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="b11f6c35893840f3a236cb4196051efb">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>49</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_c6633016e54045479b3b809bdae970fa.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24FECF6B-AC6A-4F5C-9C42-A67EDAB01BEF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c6633016e54045479b3b809bdae970fa</RootNamespace>
    <AssemblyName>ST_c6633016e54045479b3b809bdae970fa</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6633016e54045479b3b809bdae970fa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6633016e54045479b3b809bdae970fa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c6633016e54045479b3b809bdae970fa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c6633016e54045479b3b809bdae970fa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c6633016e54045479b3b809bdae970fa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c6633016e54045479b3b809bdae970fa.dll">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
WAdeAIEACwYQACkBogQGADEB3QZkAIEAvABpAJkATwdzAEkB/QV5AIkAlwd+AJEAgQSCALkA2wNT
ACEBCQeHAFEBCwaMAFkBCwaTAJkACwYGAGEBfASaACkB0QEGAJkAEgegAEkBowemAGkBgQSqAHEB
NAFTACEBWAexAKEACwYGACkBxgMQAKEAiAC5AHkBtgcQAHkBsAV+ALEACwa+ALEAGwEQALEA7QbE
AIEBZwDKAIkArQfSAMEA1wEGALEA4wXWAMkAsQBTAJEBQwHcAHEAOQfiAJkBcgcBAHEACwYGALkA
CwYGAKEB+ADoAKEBzgfxAOEACwb3AAEBCwYGAAgAFAARAQgAGAAWASkAcwB+AS4ACwBWAS4AEwBf
AS4AGwB+AS4AIwCHAS4AKwCwAS4AMwCwAS4AOwCwAS4AQwCHAS4ASwC2AS4AUwCwAS4AWwDNAUMA
YwAWAUkAcwB+AWEAewAWAWMAawAWARsAAwABAAQAAwAAAMIFRwEAAHoBTAEAAGoHUQECAAQAAwAC
AAUABQABAAYABQACAAcABwAEgAAAAQAAALEgbXUAAAAAAAAcAAAABAAAAAAAAAAAAAAA/wBeAAAA
AAAPAAAAAAAAAAAAAAAIAeQDAAAAAAQAAAAAAAAAAAAAAP8AQAAAAAAABAAAAAAAAAAAAAAA/wCK
BAAAAAAAAAAAAQAAAFwGAAAFAAIAAAAAPE1vZHVsZT4AU3lzdGVtLklPAHZhbHVlX18AU1RfYzY2
MzMwMTZlNTQwNDU0NzliM2I4MDliZGFlOTcwZmEAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xl
RGIAbXNjb3JsaWIAQWRkAE9sZURiU2NoZW1hR3VpZABPbGVEYkNvbW1hbmQAQ3JlYXRlQ29tbWFu
ZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfU291cmNlAEdldE9sZURiU2NoZW1hVGFi
bGUARGF0YVRhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAENvbnNvbGUAZ2V0X05hbWUAc2V0X0Rlc3RpbmF0aW9uVGFibGVOYW1lAGdldF9Db2x1bW5O
YW1lAFdyaXRlTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0
aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFNxbEJ1
bGtDb3B5Q29sdW1uTWFwcGluZwBzZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYzY2MzMw
MTZlNTQwNDU0NzliM2I4MDliZGFlOTcwZmEuZGxsAEZpbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0A
cmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsQnVsa0NvcHlDb2x1
bW5NYXBwaW5nQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlv
bgBPbGVEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29t
bW9uAEZpbGVJbmZvAEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8ARXhl
Y3V0ZVNjYWxhcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAE9sZURiRGF0YUFkYXB0ZXIAV3JpdGVUb1Nl
cnZlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNU
X2M2NjMzMDE2ZTU0MDQ1NDc5YjNiODA5YmRhZTk3MGZhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9jNjYzMzAxNmU1NDA0NTQ3OWIzYjgwOWJkYWU5NzBm
YS5Qcm9wZXJ0aWVzAFRhYmxlcwBHZXRGaWxlcwBnZXRfQ29sdW1uTWFwcGluZ3MAU2V0dGluZ3MA
Q29udGFpbnMAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBT
Y3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AGdldF9Db3VudABNb3ZlTmV4
dABzZXRfQ29tbWFuZFRleHQARGF0YVJvdwBnZXRfQXNzZW1ibHkAU3FsQnVsa0NvcHkAAAAzQwA6
AFwAVQBzAGUAcgBzAFwAUwBEAG8AZABkAGEAXABEAG8AYwB1AG0AZQBuAHQAcwAAFVMAVABHAF8A
UgBJAFMASwBQAEkAAAdkAGIAbwAAA0EAAAVCAEUAAAMzAAATQgBJAEQAVwBTAHQAYQBnAGUAAFt0
AGMAMwB2AG0AZABlAHYAZABiADQALgAzADMAOAAzADEAMQAxADEAMABkADcAZAAuAGQAYQB0AGEA
YgBhAHMAZQAuAHcAaQBuAGQAbwB3AHMALgBuAGUAdAAAAQADXAAAB1kARQBTAABdUAByAG8AdgBp
AGQAZQByAD0ATQBpAGMAcgBvAHMAbwBmAHQALgBBAEMARQAuAE8ATABFAEQAQgAuADEAMgAuADAA
OwBEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAASzsARQB4AHQAZQBuAGQAZQBkACAAUAByAG8AcABl
AHIAdABpAGUAcwA9ACIARQB4AGMAZQBsACAAMQAyAC4AMAA7AEgARABSAD0AABE7AEkATQBFAFgA
PQAwACIAABVUAEEAQgBMAEUAXwBOAEEATQBFAAADJAAAK3MAZQBsAGUAYwB0ACAAdABvAHAAIAAx
ACAAKgAgAGYAcgBvAG0AIABbAAADOgAAA10AAAMnAAEFJwAsAAGAu3MAZQBsAGUAYwB0ACAAUwBU
AFUARgBGACgAKABTAGUAbABlAGMAdAAgACAAJwAsAFsAJwArAEMAbwBsAHUAbQBuAF8ATgBhAG0A
ZQArACcAXQAnACAAZgByAG8AbQAgAEkAbgBmAG8AcgBtAGEAdABpAG8AbgBfAHMAYwBoAGUAbQBh
AC4AQwBvAGwAdQBtAG4AcwAgAHcAaABlAHIAZQAgAFQAYQBiAGwAZQBfAE4AYQBtAGUAPQAnAAEp
JwAgAGEAbgBkACAAVABhAGIAbABlAF8AUwBDAGgAZQBtAGEAPQAnAAErJwBhAG4AZAAgAEMAbwBs
AHUAbQBuAF8ATgBhAG0AZQAgAGkAbgAgACgAAVMpACAAZgBvAHIAIAB4AG0AbAAgAHAAYQB0AGgA
KAAnACcAKQApACwAMQAsADEALAAnACcAKQAgAEEAUwAgAEMAbwBsAHUAbQBuAEwAaQBzAHQAAR1E
AGEAdABhACAAUwBvAHUAcgBjAGUAIAA9ACAAACc7ACAASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEA
bABvAGcAIAA9AAA3OwAgAEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQB0
AHIAdQBlADsAAA9zAGUAbABlAGMAdAAgAAAPIABmAHIAbwBtACAAWwAAAy4AAC9JAE8ARQB4AGMA
ZQBwAHQAaQBvAG4AIABzAG8AdQByAGMAZQA6ACAAewAwAH0AAHFTAFQAXwBjADYANgAzADMAMAAx
ADYAZQA1ADQAMAA0ADUANAA3ADkAYgAzAGIAOAAwADkAYgBkAGEAZQA5ADcAMABmAGEALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAxQpfLSS+EEuhRsg/J2EIdwAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQEReTEHIA4ODg4ODg4ODh0SPQgSPQ4OEkEOEkUSSRJNDg4S
UQ4SVRJBEk0IElkSRRwSYRJlBSAAHRI9AyAADgYAAw4ODg4FAAEOHQ4EBhGAnQkgAhJNEYCdHRwF
IAASgKEEIAASRQMgABwEIAEcDgQgAQIOBiACAQ4SQQYgAQESgKkFIAEIEk0FIAASgLUDIAAIBiAB
EoC5CAcABA4ODg4OBCAAElUFIAEBElEFIAASgMEHIAISgMUODgMgAAIFIAEBEk0FAAIBDhwFIAAS
gM0IAAESgNERgNUFIAASgNkHIAIBDhKA2Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJx
AwYSdQMGEhACBggDBhEUBAAAEnEEAAASdQUAAQESdQQAABIQAwAAAQQIABJxBAgAEnUECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYzY2
MzMwMTZlNTQwNDU0NzliM2I4MDliZGFlOTcwZmEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFg6AAAAAAAAAAAAAHI6AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABkOgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBtdbEgAAABAG11sSA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGMANgA2ADMAMwAwADEANgBlADUANAAwADQANQA0ADcAOQBiADMAYgA4ADAAOQBiAGQAYQBl
ADkANwAwAGYAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADMA
NgA5AC4AMwAwADAANgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGMANgA2ADMAMwAwADEANgBlADUANAAwADQANQA0ADcAOQBiADMAYgA4ADAAOQBiAGQAYQBlADkA
NwAwAGYAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AYwA2ADYAMwAzADAAMQA2AGUANQA0ADAANAA1ADQANwA5AGIAMwBiADgAMAA5AGIA
ZABhAGUAOQA3ADAAZgBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGMANgA2ADMAMwAwADEANgBlADUANAAwADQANQA0ADcAOQBiADMAYgA4ADAAOQBiAGQA
YQBlADkANwAwAGYAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAzADYAOQAuADMAMAAwADYAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOAAzADYAOQAuADMAMAAwADYAMQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACEOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="63"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="57"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="49"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\SC - Excel Auto"
          TopLeft="334.285719978566,134.588237181667" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>